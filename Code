#include <SPI.h>
#include <MFRC522.h>
#include <Servo.h>
#include <Wire.h>  
#include <LiquidCrystal_I2C.h>  

#define SS_PIN 10
#define RST_PIN 9

MFRC522 mfrc522(SS_PIN, RST_PIN);
Servo servo;

// Define LCD parameters
#define LCD_ADDRESS 0x27 
#define LCD_COLS 16  
#define LCD_ROWS 2   

LiquidCrystal_I2C lcd(LCD_ADDRESS, LCD_COLS, LCD_ROWS);

void setup() {
  Serial.begin(9600);
  SPI.begin();
  mfrc522.PCD_Init();
  servo.attach(3);
  lcd.init(); 
  lcd.backlight();
  lcd.print("RFID Ready"); 
  lcd.setCursor(0, 1); 
  lcd.print("Place your card"); 
  Serial.println("RFID Ready");
  Serial.println("Place your card to the reader...");
}

void loop() {
  if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial()) {
    Serial.println("Card detected!");
    lcd.clear(); 
    lcd.setCursor(0, 0); 
    lcd.print("Card detected!"); 
    Serial.print("Card UID: ");
    dump_byte_array(mfrc522.uid.uidByte, mfrc522.uid.size);
    if (checkCardUID()) {
      Serial.println("Access granted!");
      lcd.setCursor(0, 1); 
      lcd.print("Access granted!"); 
      servo.write(90); 
      delay(1000);    
      servo.write(0);
    } else {
      Serial.println("Access denied!");
      lcd.setCursor(0, 1); 
      lcd.print("Access denied!");
    }
    delay(1000);
  }
}

void dump_byte_array(byte *buffer, byte bufferSize) {
  for (byte i = 0; i < bufferSize; i++) {
    Serial.print(buffer[i] < 0x10 ? " 0" : " ");
    Serial.print(buffer[i], HEX);
  }
  Serial.println();
}
bool checkCardUID() {
 
  byte masterCardUID[] = {0x41, 0x6A, 0x87, 0x4C}; 
  if (mfrc522.uid.size != 4) {
    return false;
  }
  for (byte i = 0; i < mfrc522.uid.size; i++) {
    if (mfrc522.uid.uidByte[i] != masterCardUID[i]) {
      return false;
    }
  }
  return true;
}
